<?php
namespace Opencontent\Ocopendata\Forms\Connectors\OpendataConnector\FieldConnector;

use Opencontent\Ocopendata\Forms\Connectors\OpendataConnector\FieldConnector;

class TagsField extends FieldConnector
{

    private $selectionType;

    private $defaultPlacement;

    public function __construct($attribute, $class, $helper)
    {

        /*echo '<pre>';
        print_r($attribute);
        print_r($class);
        print_r($helper);
        exit;*/

        parent::__construct($attribute, $class, $helper);

        $classdataType = $this->attribute->dataType();
    }

    public function getData()
    {
        return implode(', ', (array)parent::getData());
    }

    public function setContent($content)
    {
        parent::setContent($content); // TODO: Change the autogenerated stub
    }

    public function getSchema()
    {
        return array(
            "title"    => $this->attribute->attribute('name'),
            'required' => (bool)$this->attribute->attribute('is_required')
        );
    }

    public function getOptions()
    {

        $options = array(
            "helper" => $this->attribute->attribute('description'),
        );
        $options["label"] = $this->attribute->attribute('name');
        $options["name"] = $this->getIdentifier();
        $options["type"] = "eztags";

        return $options;

    }

    /*private function getDataSourceUrl()
    {

        //ezjscore/call/ezjsctagschildren::tagsChildren::291?ContentType=json&amp;&offset=0&limit=50&sortby=keyword&sortdirection=asc
        return "ezjscore/call/ezjsctagschildren::tagsChildren::291?ContentType=json&amp;&offset=0&limit=50&sortby=keyword&sortdirection=asc";
    }

    public function setPayload($postData)
    {
        $postData = (array)$postData;
        return 'pippo';
        return empty( $postData ) ? null : implode(',', $postData);

    }*/
}
